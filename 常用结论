一、GCD
1、设a>1,m,n>0,则gcd(a^m-1,a^n-1)=a^gcd(m,n)-1
2、设a>b,gcd(a,b)=1,则gcd(a^m-b^m,a^n-b^n)=a^gcd(m,n)-b^gcd(m,n)
3、G=gcd(组合数从1到n-1)={n(n为质数),1(n有多个质因子),p(n有单个质因子p)}
4、gcd(Fib(m),Fib(n))=Fib(gcd(m,n))
5、lcm(S/a,S/b)=S/gcd(a,b)
6、设Φ(x)为欧拉函数，则Φ(ab)/(Φ(a)*Φ(b))=gcd(a,b)/Φ(gcd(a,b))

三、威尔逊定理
1、当且仅当p为素数，有(p-q)!≡-1(mod p)

二、欧拉定理
1、若gcd(a,n)=1(a,n为正整数),则a^Φ(n)≡1(mod n)

三、费马小定理
1、若p为质数，a,p互质，则a^(p-1)≡1(mod p)
2、若p为质数，a,p不互质，则a^(p-1)≡0(mod p)

四、因数
1、一个数因子个数 = 分解质因子后各因子幂次加一的乘积
2、两个数乘积的因子个数等于两个数因子个数的乘积
附：一个数有几个因数的模板
  (需要提前筛好数组prime)
def count_factors(num):
	ret = 1
	if num % 2 == 0:
		count = 0
		while num % 2 == 0:
			count += 1
			num /= 2
		ret *= count
	for x in primes:
		count = 1
		while num % x == 0:
			count += 1
			num /= x
		ret *= count
		if num == 1:
			return ret
	return ret

附2：求一堆数有几个因子的模板

void chu()
{
    int i,j;
    for(i=1;i<maxn;i++)
    {
        ps[i]=1;
    }
    for(i=2;i<maxn;i++)
    {
        for(j=1;j*i<maxn;j++)
        {
            ps[i*j]++;
        }
    }
}

五、莫比乌斯反演

六、复数
